{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ubrma\\\\OneDrive\\\\Documents\\\\GitHub\\\\SkillMaster\\\\client\\\\src\\\\components\\\\CheckoutForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsProcessing(true);\n    try {\n      const response = await fetch('http://localhost:3001/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: 5000,\n          currency: 'usd'\n        })\n      });\n      const {\n        clientSecret\n      } = await response.json();\n      const {\n        error,\n        paymentIntent\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      });\n      if (error) {\n        setMessage(`Payment failed: ${error.message}`);\n      } else if (paymentIntent.status === 'succeeded') {\n        setMessage('Payment successful!');\n      }\n    } catch (error) {\n      setMessage('Error processing payment');\n    }\n    setIsProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stripe Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || isProcessing,\n      children: isProcessing ? 'Processing...' : 'Pay $50'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"8v8dNHA2lJGKXe1/VNrxSinFzdw=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","CheckoutForm","_s","stripe","elements","isProcessing","setIsProcessing","message","setMessage","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","amount","currency","clientSecret","json","error","paymentIntent","confirmCardPayment","payment_method","card","getElement","status","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Ubrma/OneDrive/Documents/GitHub/SkillMaster/client/src/components/CheckoutForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setIsProcessing(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/create-payment-intent', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ amount: 5000, currency: 'usd' }),\r\n      });\r\n      const { clientSecret } = await response.json();\r\n\r\n      const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      });\r\n\r\n      if (error) {\r\n        setMessage(`Payment failed: ${error.message}`);\r\n      } else if (paymentIntent.status === 'succeeded') {\r\n        setMessage('Payment successful!');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Error processing payment');\r\n    }\r\n\r\n    setIsProcessing(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Stripe Payment</h2>\r\n      <CardElement />\r\n      <button type=\"submit\" disabled={!stripe || isProcessing}>\r\n        {isProcessing ? 'Processing...' : 'Pay $50'}\r\n      </button>\r\n      {message && <div>{message}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBL,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAE,IAAI;UAAEC,QAAQ,EAAE;QAAM,CAAC;MACxD,CAAC,CAAC;MACF,MAAM;QAAEC;MAAa,CAAC,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAE9C,MAAM;QAAEC,KAAK;QAAEC;MAAc,CAAC,GAAG,MAAMrB,MAAM,CAACsB,kBAAkB,CAACJ,YAAY,EAAE;QAC7EK,cAAc,EAAE;UACdC,IAAI,EAAEvB,QAAQ,CAACwB,UAAU,CAAChC,WAAW;QACvC;MACF,CAAC,CAAC;MAEF,IAAI2B,KAAK,EAAE;QACTf,UAAU,CAAC,mBAAmBe,KAAK,CAAChB,OAAO,EAAE,CAAC;MAChD,CAAC,MAAM,IAAIiB,aAAa,CAACK,MAAM,KAAK,WAAW,EAAE;QAC/CrB,UAAU,CAAC,qBAAqB,CAAC;MACnC;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdf,UAAU,CAAC,0BAA0B,CAAC;IACxC;IAEAF,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACEN,OAAA;IAAM8B,QAAQ,EAAErB,YAAa;IAAAsB,QAAA,gBAC3B/B,OAAA;MAAA+B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBnC,OAAA,CAACJ,WAAW;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfnC,OAAA;MAAQoC,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAE,CAAClC,MAAM,IAAIE,YAAa;MAAA0B,QAAA,EACrD1B,YAAY,GAAG,eAAe,GAAG;IAAS;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACR5B,OAAO,iBAAIP,OAAA;MAAA+B,QAAA,EAAMxB;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEX,CAAC;AAACjC,EAAA,CA9CID,YAAY;EAAA,QACDJ,SAAS,EACPC,WAAW;AAAA;AAAAwC,EAAA,GAFxBrC,YAAY;AAgDlB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}