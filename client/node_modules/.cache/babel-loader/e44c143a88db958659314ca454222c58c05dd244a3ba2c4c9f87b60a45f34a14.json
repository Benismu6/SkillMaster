{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ubrma\\\\OneDrive\\\\Documents\\\\GitHub\\\\SkillMaster\\\\client\\\\src\\\\components\\\\CheckoutForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport './CheckoutForm.css'; // Custom styles for the form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsProcessing(true);\n    try {\n      const response = await fetch('http://localhost:3001/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: 10,\n          currency: 'usd'\n        }) // $10\n      });\n      if (!response.ok) {\n        throw new Error(`Backend error: ${response.statusText}`);\n      }\n      const {\n        clientSecret\n      } = await response.json();\n      const {\n        error,\n        paymentIntent\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      });\n      if (error) {\n        setMessage(`Payment failed: ${error.message}`);\n      } else if (paymentIntent.status === 'succeeded') {\n        setMessage('Payment successful!');\n      }\n    } catch (error) {\n      setMessage('Error processing payment');\n    }\n    setIsProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkout-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"checkout-title\",\n      children: \"Complete Your Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"checkout-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkout-label\",\n        children: \"Enter Card Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n        className: \"card-element\",\n        options: cardElementOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"checkout-button\",\n        disabled: !stripe || isProcessing,\n        children: isProcessing ? 'Processing...' : 'Pay $50'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkout-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom styling for the CardElement\n_s(CheckoutForm, \"8v8dNHA2lJGKXe1/VNrxSinFzdw=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nconst cardElementOptions = {\n  style: {\n    base: {\n      color: '#32325d',\n      fontFamily: 'Arial, sans-serif',\n      fontSmoothing: 'antialiased',\n      fontSize: '16px',\n      '::placeholder': {\n        color: '#aab7c4'\n      }\n    },\n    invalid: {\n      color: '#fa755a',\n      iconColor: '#fa755a'\n    }\n  }\n};\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","CheckoutForm","_s","stripe","elements","isProcessing","setIsProcessing","message","setMessage","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","amount","currency","ok","Error","statusText","clientSecret","json","error","paymentIntent","confirmCardPayment","payment_method","card","getElement","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","options","cardElementOptions","type","disabled","_c","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","$RefreshReg$"],"sources":["C:/Users/Ubrma/OneDrive/Documents/GitHub/SkillMaster/client/src/components/CheckoutForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport './CheckoutForm.css'; // Custom styles for the form\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setIsProcessing(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/create-payment-intent', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ amount: 10, currency: 'usd' }), // $10\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Backend error: ${response.statusText}`);\r\n      }\r\n\r\n      const { clientSecret } = await response.json();\r\n\r\n      const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      });\r\n\r\n      if (error) {\r\n        setMessage(`Payment failed: ${error.message}`);\r\n      } else if (paymentIntent.status === 'succeeded') {\r\n        setMessage('Payment successful!');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Error processing payment');\r\n    }\r\n\r\n    setIsProcessing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkout-form-container\">\r\n      <h2 className=\"checkout-title\">Complete Your Payment</h2>\r\n      <form onSubmit={handleSubmit} className=\"checkout-form\">\r\n        <label className=\"checkout-label\">Enter Card Details</label>\r\n        <CardElement className=\"card-element\" options={cardElementOptions} />\r\n        <button type=\"submit\" className=\"checkout-button\" disabled={!stripe || isProcessing}>\r\n          {isProcessing ? 'Processing...' : 'Pay $50'}\r\n        </button>\r\n        {message && <div className=\"checkout-message\">{message}</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Custom styling for the CardElement\r\nconst cardElementOptions = {\r\n  style: {\r\n    base: {\r\n      color: '#32325d',\r\n      fontFamily: 'Arial, sans-serif',\r\n      fontSmoothing: 'antialiased',\r\n      fontSize: '16px',\r\n      '::placeholder': {\r\n        color: '#aab7c4',\r\n      },\r\n    },\r\n    invalid: {\r\n      color: '#fa755a',\r\n      iconColor: '#fa755a',\r\n    },\r\n  },\r\n};\r\n\r\nexport default CheckoutForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}